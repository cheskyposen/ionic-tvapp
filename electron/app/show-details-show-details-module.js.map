{"version":3,"sources":["webpack:///./src/app/show-details/season-details/season-details.component.html","webpack:///./src/app/show-details/season-details/season-details.component.scss","webpack:///./src/app/show-details/season-details/season-details.component.ts","webpack:///./src/app/show-details/show-details.module.ts","webpack:///./src/app/show-details/show-details.page.html","webpack:///./src/app/show-details/show-details.page.scss","webpack:///./src/app/show-details/show-details.page.ts"],"names":[],"mappings":"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","file":"show-details-show-details-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"danger\\\"\\n                  (click)=\\\"onClose()\\\">\\n        <ion-icon name=\\\"close-circle-outline\\\"\\n                  slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{showName}} - Season {{episodeList[0].season}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let episode of episodeList\\\">\\n      <ion-thumbnail *ngIf=\\\"episode.image\\\">\\n        <img src=\\\"{{episode.image}}\\\">\\n      </ion-thumbnail>\\n      <ion-label margin>\\n        S{{episode.season}}E{{episode.episode}}: {{episode.name}}\\n        <p [innerHTML]=\\\"episode.summary\\\" ></p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3ctZGV0YWlscy9zZWFzb24tZGV0YWlscy9zZWFzb24tZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Episode} from '../../models/episode';\nimport {ModalController} from '@ionic/angular';\n\n@Component({\n  selector: 'app-season-details',\n  templateUrl: './season-details.component.html',\n  styleUrls: ['./season-details.component.scss'],\n})\nexport class SeasonDetailsComponent implements OnInit {\n  @Input() episodeList: Episode[];\n  @Input() showName: string;\n  constructor(public modalCtr: ModalController) { }\n\n  ngOnInit() {}\n\n  async onClose() {\n    await this.modalCtr.dismiss();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ShowDetailsPage } from './show-details.page';\nimport {SeasonDetailsComponent} from './season-details/season-details.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ShowDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ShowDetailsPage, SeasonDetailsComponent],\n  entryComponents: [SeasonDetailsComponent]\n})\nexport class ShowDetailsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button\\n              defaultHref=\\\"/search\\\"\\n              text=\\\"back\\\"\\n      >\\n      </ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card *ngIf=\\\"show\\\">\\n    <ion-card-header>\\n      <ion-card-title color=\\\"primary\\\">{{show.name}}</ion-card-title>\\n      <ion-card-subtitle color=\\\"secondary\\\">\\n        <span *ngIf=\\\"show.status\\\">Status: <strong>{{show.status}}</strong></span>\\n        <span *ngIf=\\\"show.status && show.premiered\\\">   |   </span>\\n        <span *ngIf=\\\"show.premiered\\\"> Aired: <strong>{{show.premiered | date}}</strong></span>\\n      </ion-card-subtitle>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-item-divider>\\n        <ion-text [innerHTML]=\\\"show.summary\\\" color=\\\"dark\\\"></ion-text>\\n      </ion-item-divider>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <ion-text *ngIf=\\\"show.lastEp\\\"><strong>Last Ep:</strong> S{{show.lastEp.season}}E{{show.lastEp.episode}} {{show.lastEp.name}}</ion-text>\\n          </ion-col>\\n          <ion-col text-end>\\n            <ion-text *ngIf=\\\"show.nextEp\\\"><strong>Next Ep:</strong> S{{show.nextEp.season}}E{{show.nextEp.episode}} {{show.nextEp.name}}</ion-text>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col *ngFor=\\\"let season of show.episodes; let i = index\\\" sizeMd=\\\"4\\\">\\n            <ion-button *ngIf=\\\"i % 2 == 0\\\" color=\\\"primary\\\" padding expand=\\\"block\\\" (click)=\\\"loadSeason(i)\\\">Season {{season[0].season}}</ion-button>\\n            <ion-button *ngIf=\\\"i % 2 == 1\\\" color=\\\"secondary\\\" padding expand=\\\"block\\\" (click)=\\\"loadSeason(i)\\\">Season {{season[0].season}}</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3ctZGV0YWlscy9zaG93LWRldGFpbHMucGFnZS5zY3NzIn0= */\"","import { Component } from '@angular/core';\nimport {Show} from '../models/show';\nimport {TvmazeService} from '../models/tvmaze.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Episode} from '../models/episode';\nimport { ModalController } from '@ionic/angular';\nimport {SeasonDetailsComponent} from './season-details/season-details.component';\n\n@Component({\n    selector: 'app-show-details',\n    templateUrl: './show-details.page.html',\n    styleUrls: ['./show-details.page.scss'],\n})\nexport class ShowDetailsPage {\n    show: Show;\n    sid: string;\n\n    constructor(public tvmaze: TvmazeService, public route: ActivatedRoute, public modalController: ModalController) {\n        this.route.paramMap\n            .subscribe(pm => {\n                this.sid = pm.get('sid');\n                this.fetchShow();\n            });\n    }\n\n    fetchShow(): void {\n        this.tvmaze.fetchShow(this.sid)\n            .subscribe(resultingShow => {\n                    this.show = resultingShow;\n                    this.loadFirstAndLastEpisodes();\n                    this.tvmaze.fetchEpisodes(this.show.id)\n                        .subscribe(\n                            (episodes: Episode[]) => {\n                                this.show.addEpisodes(episodes);\n                            });\n                }\n            );\n    }\n\n    loadFirstAndLastEpisodes(): void {\n        if (this.show.lastEpLink) {\n            this.tvmaze.fetchEpisodeByURL(this.show.lastEpLink).subscribe(ep => this.show.lastEp = ep);\n        }\n\n        if (this.show.nextEpLink) {\n            this.tvmaze.fetchEpisodeByURL(this.show.nextEpLink).subscribe(ep => this.show.nextEp = ep);\n        }\n    }\n\n    async loadSeason(season: number) {\n        const modal = await this.modalController.create({\n            component: SeasonDetailsComponent,\n            componentProps: {\n                episodeList: this.show.episodes[season],\n                showName: this.show.name\n            }\n        });\n        return await modal.present();\n    }\n}\n"],"sourceRoot":""}