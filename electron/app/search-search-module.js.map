{"version":3,"sources":["webpack:///./src/app/search/results/results.component.html","webpack:///./src/app/search/results/results.component.scss","webpack:///./src/app/search/results/results.component.ts","webpack:///./src/app/search/search.module.ts","webpack:///./src/app/search/search.page.html","webpack:///./src/app/search/search.page.scss","webpack:///./src/app/search/search.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8pBAA8pB,aAAa,gI;;;;;;;;;;;ACA3qB,+DAA+D,2J;;;;;;;;;;;;;;;;;;;ACAR;AAEG;AACX;AAO/C;IAGE,0BAAmB,MAAqB,EAAS,eAAgC;QAA9D,WAAM,GAAN,MAAM,CAAe;QAAS,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAEtF,mCAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;aAC5B,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,KAAK,GAAG,GAAG,EAAhB,CAAgB,CAAC,CAAC;IAC1C,CAAC;IAEK,gCAAK,GAAX;;;;4BACE,qBAAM,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;;wBAApC,SAAoC,CAAC;;;;;KACtC;IAXQ;QAAR,2DAAK,EAAE;;kDAAc;IADX,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,gHAAuC;;SAExC,CAAC;+EAI2B,oEAAa,EAA0B,8DAAe;OAHtE,gBAAgB,CAa5B;IAAD,uBAAC;CAAA;AAb4B;;;;;;;;;;;;;;;;;;;;;;;;ACVY;AACM;AACF;AACU;AAEV;AAEF;AACkB;AAE7D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAYF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAV5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,uDAAU,EAAE,2EAAgB,CAAC;YAC5C,eAAe,EAAE,CAAC,2EAAgB,CAAC;SACpC,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;AC3B7B,mnC;;;;;;;;;;;ACAA,+DAA+D,uI;;;;;;;;;;;;;;;;;;;ACArB;AACO;AACY;AAO7D;IAGE,oBAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAElD,6BAAQ,GAAd;;;;;4BACkB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC5C,SAAS,EAAE,2EAAgB;4BAC3B,cAAc,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE;yBACvC,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACK,qBAAM,KAAK,CAAC,OAAO,EAAE;4BAA5B,sBAAO,SAAqB,EAAC;;;;KAChC;IAXU,UAAU;QALtB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,4FAAiC;;SAElC,CAAC;+EAIoC,8DAAe;OAHxC,UAAU,CAYtB;IAAD,iBAAC;CAAA;AAZsB","file":"search-search-module.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button color=\\\"primary\\\" (click)=\\\"close()\\\" name=\\\"close\\\">\\n        <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"icon-only\\\">\\n        </ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Results</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list *ngIf=\\\"shows\\\">\\n    <ion-item *ngFor=\\\"let show of shows\\\" [routerLink]=\\\"'/details/' + show.id\\\" (click)=\\\"close()\\\">\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <ion-img [src]=\\\"show.image\\\" [alt]=\\\"show.name\\\"></ion-img>\\n      </ion-thumbnail>\\n      <ion-label>\\n        <h2>{{ show.name }}</h2>\\n        <p [innerHTML]=\\\"show.summary\\\"></p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC9yZXN1bHRzL3Jlc3VsdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Show} from '../../models/show';\nimport {TvmazeService} from '../../models/tvmaze.service';\nimport {ModalController} from '@ionic/angular';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.scss'],\n})\nexport class ResultsComponent implements OnInit {\n  @Input() term: string;\n  shows: Show[];\n  constructor(public tvmaze: TvmazeService, public modalController: ModalController) { }\n\n  ngOnInit() {\n    this.tvmaze.fetchShows(this.term)\n        .subscribe(res => this.shows = res);\n  }\n\n  async close() {\n    await this.modalController.dismiss();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SearchPage } from './search.page';\nimport {ResultsComponent} from './results/results.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SearchPage, ResultsComponent],\n  entryComponents: [ResultsComponent]\n})\nexport class SearchPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Show Search</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col sizeMd=\\\"6\\\" offsetMd=\\\"3\\\">\\n        <ion-card>\\n          <ion-card-header>\\n            Enter your search\\n          </ion-card-header>\\n          <ion-card-content padding>\\n            <form (ngSubmit)=\\\"onSearch()\\\">\\n            <ion-item>\\n              <ion-input type=\\\"text\\\"\\n                         required\\n                         placeholder=\\\"e.x. You're the Worst\\\"\\n                         color=\\\"primary\\\"\\n                         clearInput\\n                         [(ngModel)]=\\\"query\\\"\\n                         name=\\\"query\\\"\\n              ></ion-input>\\n            </ion-item>\\n\\n            <ion-button color=\\\"secondary\\\" padding type=\\\"submit\\\" size=\\\"block\\\">\\n              Search\\n              <ion-icon slot=\\\"start\\\" name=\\\"search\\\"></ion-icon>\\n            </ion-button>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC9zZWFyY2gucGFnZS5zY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport {ResultsComponent} from './results/results.component';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.page.html',\n  styleUrls: ['./search.page.scss'],\n})\nexport class SearchPage {\n    query: string;\n\n  constructor(public modalController: ModalController) { }\n\n  async onSearch() {\n      const modal = await this.modalController.create({\n          component: ResultsComponent,\n          componentProps: { term: this.query }\n      });\n      return await modal.present();\n  }\n}\n"],"sourceRoot":""}